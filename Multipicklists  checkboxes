page:
----------
   <apex:pageBlockSection title="Fields" columns="2">
    <apex:repeat value="{!listObjectFieldInfoList}" var="fieldInfo">
        <apex:pageBlockSectionItem rendered="{!fieldInfo.IsMultiSelectPickList==true}">
            <apex:outputLabel value="{!fieldInfo.label}"/>
            <apex:selectCheckboxes value="{!fieldInfo.checkboxSelections}" layout="PageDirection">
                <apex:selectOptions value="{!fieldInfo.MyCheckboxes}"/>
            </apex:selectCheckboxes>
        </apex:pageBlockSectionItem>
        <apex:inputField value="{!sObjectToBind[fieldInfo.fieldAPIName]}" rendered="{!fieldInfo.IsMultiSelectPickList==false}"/>
    </apex:repeat>
</apex:pageBlockSection>

Controller:
-------------
public class DynaFieldSavePageCls {


    
    public List<FieldInfo> listObjectFieldInfoList {get;set;}

   public String Render { get; set; }
  private Map<String, String> fieldValueLabels = new Map<String, String>();
     public  List<String> checkboxSelections {get;set;}
      
    public sObject sObjectToBind {get;set;}

   private Map<String, Map<String,String>> fieldpicklists = new Map<String, Map<String,String>>();
  public List<SelectOption> options{get;set;}
     public list<selectOption> getMyCheckboxes(){

      string objectname ='rajesh__MForm__c'; 

 list<SelectOption> options = new list<SelectOption>();
 
 

    Schema.sObjectType objType = sObjectToBind.getSObjectType(); 
    


    Schema.DescribeSObjectResult objDescribe = objType.getDescribe();  
    
     

    map<String, Schema.SObjectField> fieldMap = objDescribe.fields.getMap(); 
    
    
    for(Schema.SObjectField field : fieldMap.values())
    {

      Schema.DescribeFieldResult fieldResult = field.getDescribe();
      
        if(fieldResult.getType() == Schema.DisplayType.MultiPickList) {
        
 Schema.Picklistentry[] values = fieldResult.getPickListValues();
 
 Map<String, String> picklists = new Map<String, String>();

 for(Schema.Picklistentry val: values){
 

  options.add(new SelectOption(val.getValue(),val.getLabel()));
  
  
 }
  
    
}
 return options;

}


 public void doSave()
{
if( sObjectToBind != null )
  upsert sObjectToBind;
}

   public DynaFieldSavePageCls()
{

      string objectname ='rajesh__MForm__c'; 

    listObjectFields =  new List<String>();
    
    listObjectFieldInfoList=new List<FieldInfo>();
    Map<String , Schema.SObjectType> globalDescription = Schema.getGlobalDescribe();
    Schema.sObjectType sObjType = globalDescription.get(objectname);
  
    sObjectToBind = sObjType.newSObject();
    Schema.DescribeSObjectResult r1 = sObjType.getDescribe();
   
    List<User> lstUser = [ SELECT Id FROM User WHERE Username = 'rajesh060708@gmail.com' ];
if( sObjectToBind != null && lstUser != null && !lstUser.isEmpty() )
  sObjectToBind.put('OwnerId', lstUser[0].Id);

       Map<String , Schema.SObjectField> mapFieldList = r1.fields.getMap();
    Integer i = 0;
    for(Schema.SObjectField field : mapFieldList.values())
    {
    
        Schema.DescribeFieldResult fieldResult = field.getDescribe();
        if(fieldResult.isAccessible() && fieldResult.isUpdateable())
        {
           
           listObjectFieldInfoList.add(new FieldInfo(fieldResult.getName(),TRUE,fieldResult.getLabel()));
        }
    }       
}

public class FieldInfo
{
   public  String fieldAPIName {get;set;}
  public  Boolean IsMultiSelectPickList {get;set;}
  public String Label{get; set;}
  
  public boolean checkboxSelections{get; set;}
  
  public String MyCheckboxes{get ;set;}
   
   public FieldInfo(String fieldAPIName,Boolean IsMultiSelectPicklist,String Label)
   {
   this.fieldAPINAme=fieldAPIName;
   this.IsMultiSelectPicklist=IsMultiSelectPicklist;
   this.Label=Label;
   }
}


}
